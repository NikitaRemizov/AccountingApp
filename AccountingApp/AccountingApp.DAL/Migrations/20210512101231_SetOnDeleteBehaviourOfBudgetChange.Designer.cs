// <auto-generated />
using System;
using AccountingApp.DAL.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountingApp.DAL.Migrations
{
    [DbContext(typeof(AccountingDbContext))]
    [Migration("20210512101231_SetOnDeleteBehaviourOfBudgetChange")]
    partial class SetOnDeleteBehaviourOfBudgetChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAO.Models.BudgetChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<Guid>("BudgetTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BudgetTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("budgetChange");
                });

            modelBuilder.Entity("DAO.Models.BudgetType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("budgetTypes");
                });

            modelBuilder.Entity("DAO.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DAO.Models.BudgetChange", b =>
                {
                    b.HasOne("DAO.Models.BudgetType", "BudgetType")
                        .WithMany("BudgetChanges")
                        .HasForeignKey("BudgetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.Models.User", "User")
                        .WithMany("BudgetChanges")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BudgetType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAO.Models.BudgetType", b =>
                {
                    b.HasOne("DAO.Models.User", "User")
                        .WithMany("BudgetTypes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAO.Models.BudgetType", b =>
                {
                    b.Navigation("BudgetChanges");
                });

            modelBuilder.Entity("DAO.Models.User", b =>
                {
                    b.Navigation("BudgetChanges");

                    b.Navigation("BudgetTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
